// Эта программа - пример декомпозиции функций, когда сами функции содержат в себе условия.
// Код записан лаконично благодаря использованию идиоматического выражения с when.

fun main() { // Объявляем основную функцию.
    println("Write X argument for function") // Просим пользователя ввести данные с клавиатуры.
    var x = readln().toDouble() // Переводим введённую переменную в Double, т.к. результат может быть дробным.
    print("Your result: ") // Добавляем строчку, которая оповещает о результате.
    println(f(x)) // Распечатываем функцию.
}

fun f(x: Double) = when { // Функция на вход принимает аргумент х типа Double.
    x <= 0 -> f1(x)       // Далее, в зависимости от того, чему равен входящий аргумент,
    x >= 1 -> f3(x)       // функция будет возвращать результат работы той или иной функции.
    else -> f2(x)
}
fun f1(x: Double) = x * x + 1 // Здесь в каждой функции описана математическая логика итогового значения.
fun f2(x: Double) = 1 / (x * x)
fun f3(x: Double) = x * x - 1